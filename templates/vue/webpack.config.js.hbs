const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { VueLoaderPlugin } = require('vue-loader');
{{#if qiankun}}
{{#if (eq qiankunMode "micro")}}
const { name } = require('./package.json');
{{/if}}
{{/if}}

module.exports = (env, argv) => {
  const isProduction = argv.mode === 'production';
  
  return {
    entry: './src/main.{{#if typescript}}ts{{else}}js{{/if}}',
    output: {
      path: path.resolve(__dirname, 'dist'),
      filename: isProduction ? '[name].[contenthash].js' : '[name].js',
      clean: true,
      {{#if qiankun}}
      {{#if (eq qiankunMode "micro")}}
      library: `${name}-[name]`,
      libraryTarget: 'umd',
      jsonpFunction: `webpackJsonp_${name}`,
      globalObject: 'window',
      {{/if}}
      {{/if}}
    },
    resolve: {
      extensions: ['.vue', '.ts', '.js'],
      alias: {
        '@': path.resolve(__dirname, 'src'),
        {{#if (eq vueVersion "2")}}
        vue$: 'vue/dist/vue.esm.js'
        {{/if}}
      },
    },
    module: {
      rules: [
        {
          test: /\.vue$/,
          loader: 'vue-loader',
        },
        {{#if typescript}}
        {
          test: /\.ts$/,
          loader: 'ts-loader',
          options: {
            appendTsSuffixTo: [/\.vue$/],
            transpileOnly: true,
            compilerOptions: {
              noEmit: false,
            },
          },
          exclude: /node_modules/,
        },
        {{else}}
        {
          test: /\.js$/,
          exclude: /node_modules/,
          use: {
            loader: 'babel-loader',
            options: {
              presets: ['@babel/preset-env'],
            },
          },
        },
        {{/if}}
        {
          test: /\.css$/,
          use: ['style-loader', 'css-loader'],
        },
        {
          test: /\.s[ac]ss$/,
          use: [
            'style-loader', 
            'css-loader', 
            {
              loader: 'sass-loader',
              options: {
                api: 'modern-compiler',
                sassOptions: {
                  silenceDeprecations: ['legacy-js-api']
                }
              }
            }
          ],
        },
        {
          test: /\.(png|svg|jpg|jpeg|gif)$/i,
          type: 'asset/resource',
        },
        {
          test: /\.(woff|woff2|eot|ttf|otf)$/i,
          type: 'asset/resource',
        },
      ],
    },
    plugins: [
      new VueLoaderPlugin(),
      new HtmlWebpackPlugin({
        template: './public/index.html',
        {{#if qiankun}}
        {{#if (eq qiankunMode "micro")}}
        inject: false,
        {{/if}}
        {{/if}}
      }),
    ],
    devServer: {
      static: {
        directory: path.join(__dirname, 'public'),
      },
      compress: true,
      port: 3000,
      hot: true,
      historyApiFallback: true,
      {{#if qiankun}}
      {{#if (eq qiankunMode "micro")}}
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',
        'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',
      },
      {{/if}}
      {{/if}}
    },
    {{#if qiankun}}
    {{#if (eq qiankunMode "micro")}}
    externals: {
      vue: 'Vue',
    },
    {{/if}}
    {{/if}}
  };
};